from aiogram import types
from loader import dp, bot
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from api import *
from keyboards.default.services_button import services, article_buttons
from states.services import Services


@dp.message_handler(Text(equals=['üìù –£—Å–ª—É–≥–∏', 'üìù Xizmatlar', 'üìù Services']))
async def services_handler(message: types.Message, state: FSMContext):
    language = language_info(message.from_user.id)
    if language == 'uz':
        await message.answer("Xizmatlarimiz", reply_markup=services(language))
    elif language == 'ru':
        await message.answer("–ù–∞—à–∏ —É—Å–ª—É–≥–∏", reply_markup=services(language))
    else:
        await message.answer("Our services", reply_markup=services(language))


@dp.message_handler(Text(equals=['Maqola', '–°—Ç–∞—Ç—å—è', 'Article']))
async def article_handler(message: types.Message, state: FSMContext):
    language = language_info(message.from_user.id)
    if language == 'uz':
        await message.answer(text="Quyidagilardan birini tanlang üëá", reply_markup=article_buttons(language))
    elif language == 'ru':
        await message.answer(text="Choose one of the following üëá", reply_markup=article_buttons(language))
    else:
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö üëá", reply_markup=article_buttons(language))
    # await state.finish()


@dp.message_handler(Text(equals=['DGU', '–ü–∞—Ç–µ–Ω—Ç', 'Patent']))
async def patent_handler(message: types.Message, state: FSMContext):
    language = language_info(message.from_user.id)
    if language == 'uz':
        await message.answer("Bot test rejimida ishlamoqda. Iltimos, keyinroq urinib ko'ring!")
    elif language == 'ru':
        await message.answer("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
    else:
        await message.answer("The bot is working in test mode. Please try again later!")
    # await state.finish()


@dp.message_handler(Text(equals=['Sertifikat', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', 'Certificate']))
async def certificate_handler(message: types.Message, state: FSMContext):
    language = language_info(message.from_user.id)
    if language == 'uz':
        await message.answer("Bot test rejimida ishlamoqda. Iltimos, keyinroq urinib ko'ring!")
    elif language == 'ru':
        await message.answer("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
    else:
        await message.answer("The bot is working in test mode. Please try again later!")
    # await state.finish()




